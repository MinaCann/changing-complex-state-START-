{"ast":null,"code":"import _slicedToArray from \"/Users/mumine/Desktop/changing-complex-state-START /node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mumine/Desktop/changing-complex-state-START /src/components/App.jsx\";\nimport React, { useState } from \"react\";\nimport { NewLineKind } from \"typescript\";\n\nfunction App() {\n  //creating fullName with initial value fName and lName\n  var _useState = useState({\n    fName: \"\",\n    lName: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      fullName = _useState2[0],\n      setFullName = _useState2[1]; //Create handleChange function\n\n\n  function handleChange(event) {\n    //getting the user entered value\n    var newValue = event.target.value; //getting the value of name attribute\n    //To understand which input has change\n    //if inputName= fName, it measn user enteres the first input\n    //if inputName= lName, it means user enters teh second input\n\n    var inputName = event.target.name; //prevValue hold fName and lName values\n\n    setFullName(function (prevValue) {\n      // console.log(prevValue);\n      if (inputName === \"fName\") {\n        //if there is a change in fName\n        //return fName with latest newValue\n        //return lName with the oldest privious value\n        return {\n          fName: newValue,\n          lName: prevValue.lName\n        };\n      } else if (inputName === 'lName') {\n        return {\n          fName: prevValue.fName,\n          lName: newValue\n        };\n      }\n    });\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"Hello \", fullName.fName, \" \", fullName.lName), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleChange,\n    name: \"fName\",\n    placeholder: \"First Name\",\n    value: fullName.fName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleChange,\n    name: \"lName\",\n    placeholder: \"Last Name\",\n    value: fullName.lName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"Submit\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/mumine/Desktop/changing-complex-state-START /src/components/App.jsx"],"names":["React","useState","NewLineKind","App","fName","lName","fullName","setFullName","handleChange","event","newValue","target","value","inputName","name","prevValue"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,YAA5B;;AACA,SAASC,GAAT,GAAe;AACb;AACA,kBAA6BF,QAAQ,CAAC;AAACG,IAAAA,KAAK,EAAC,EAAP;AAAUC,IAAAA,KAAK,EAAC;AAAhB,GAAD,CAArC;AAAA;AAAA,MAAOC,QAAP;AAAA,MAAgBC,WAAhB,iBAFa,CAGb;;;AACA,WAASC,YAAT,CAAsBC,KAAtB,EAA4B;AAC1B;AACA,QAAMC,QAAQ,GAACD,KAAK,CAACE,MAAN,CAAaC,KAA5B,CAF0B,CAG1B;AACA;AACA;AACA;;AACA,QAAMC,SAAS,GAACJ,KAAK,CAACE,MAAN,CAAaG,IAA7B,CAP0B,CAQ1B;;AACAP,IAAAA,WAAW,CAAC,UAAAQ,SAAS,EAAG;AACvB;AACD,UAAGF,SAAS,KAAG,OAAf,EAAuB;AACrB;AACA;AACA;AACA,eAAM;AACJT,UAAAA,KAAK,EAAEM,QADH;AAEJL,UAAAA,KAAK,EAAEU,SAAS,CAACV;AAFb,SAAN;AAGG,OAPL,MAQO,IAAIQ,SAAS,KAAG,OAAhB,EAAwB;AAC3B,eAAM;AACJT,UAAAA,KAAK,EAACW,SAAS,CAACX,KADZ;AAEJC,UAAAA,KAAK,EAAEK;AAFH,SAAN;AAID;AACF,KAhBU,CAAX;AAiBD;;AAAA;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAWJ,QAAQ,CAACF,KAApB,OAA4BE,QAAQ,CAACD,KAArC,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACA,IAAA,QAAQ,EAAEG,YADV;AAEA,IAAA,IAAI,EAAC,OAFL;AAGA,IAAA,WAAW,EAAC,YAHZ;AAIA,IAAA,KAAK,EAAEF,QAAQ,CAACF,KAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE;AACA,IAAA,QAAQ,EAAEI,YADV;AAEA,IAAA,IAAI,EAAC,OAFL;AAGA,IAAA,WAAW,EAAC,WAHZ;AAIA,IAAA,KAAK,EAAEF,QAAQ,CAACD,KAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF,CAFF,CADF;AAoBD;;AACD,eAAeF,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { NewLineKind } from \"typescript\";\nfunction App() {\n  //creating fullName with initial value fName and lName\n  const [fullName,setFullName]=useState({fName:\"\",lName:\"\"});\n  //Create handleChange function\n  function handleChange(event){\n    //getting the user entered value\n    const newValue=event.target.value\n    //getting the value of name attribute\n    //To understand which input has change\n    //if inputName= fName, it measn user enteres the first input\n    //if inputName= lName, it means user enters teh second input\n    const inputName=event.target.name\n    //prevValue hold fName and lName values\n    setFullName(prevValue =>{\n     // console.log(prevValue);\n    if(inputName===\"fName\"){\n      //if there is a change in fName\n      //return fName with latest newValue\n      //return lName with the oldest privious value\n      return{\n        fName: newValue,\n        lName: prevValue.lName\n      } }\n      else if (inputName==='lName'){\n        return{\n          fName:prevValue.fName,\n          lName: newValue\n        }\n      }\n    })\n  };\n  return (\n    <div className=\"container\">\n      <h1>Hello {fullName.fName} {fullName.lName}</h1>\n      <form>\n        <input \n        onChange={handleChange}\n        name=\"fName\" \n        placeholder=\"First Name\" \n        value={fullName.fName}\n        />\n        <input \n        onChange={handleChange}\n        name=\"lName\" \n        placeholder=\"Last Name\" \n        value={fullName.lName}\n        />\n        <button>Submit</button>\n      </form>\n    </div>\n  );\n}\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}